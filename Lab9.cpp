// 1. С начала суток прошло N секунд (N — целое). 
//Найти количество секунд, прошедших с начала последней минуты.

#include <iostream>
#include <cmath>

int main()
{
	int N = 568; 

    // Остаток целочисленного деления на 60.
	int s = (N % 60); 

    // Выводим результат
	printf_s("%i", s); 
    
	return 0;
}
// 2. Дни недели пронумерованы следующим образом: 
//    0 — воскресенье, 1 — понедельник, 2 — вторник, . . . , 6 — суббота. 
//    Дано целое число K, лежащее в диапазоне 1–365. 
//    Определить номер дня недели для K-го дня года, если известно, что в этом году 1 января было понедельником.

#include <iostream>

int main()
{
	int K = 168; 

    // Пока значение больше 7, вычитаем по неделе
	while (K >= 6) 
		K -= 6;

    // Выводим результат
	printf_s("%i", K);

	return 0;
}
// 3. Дни недели пронумерованы следующим образом: 
//    1 — понедельник, 2 — вторник, . . . , 6 — суббота, 7 — воскресенье. 
//    Дано целое число K, лежащее в диапазоне 1–365, и целое число N, лежащее в диапазоне 1–7. 
//    Определить номер дня недели для K-го дня года, если известно, 
//    что в этом году 1 января было днем недели с номером N

#include <iostream>

int main()
{
	int K = 61; 
	int N = 3; 

    // Пока значение больше 7, вычитаем по неделе
	while (K > 7) 
		K -= 7;
    //Учитываем, что год начался с 3 дня недели
	K = K + 2; 

    // Выводим результат
	printf_s("%i", K);

	return 0;
}
// 4. Даны целые положительные числа A, B, C. 
//    На прямоугольнике размера A × B размещено максимально 
//    возможное количество квадратов со стороной C (без наложений). 
//    Найти количество квадратов, размещенных на прямоугольнике, 
//    а также площадь незанятой части прямоугольника. 

 #include <iostream>

int main() {
	int A = 6; 
	int B = 14;
	int C = 3;

    // Максимально возможное количество квадратов
	int N = ((A / C) * (B / C)); 
    // Оставшаяся площадь
	int S = (A * B - N * C * C);

    //Выводим результат
	printf_s("%i\n", N); 
	printf_s("%i", S);

	return 0;
}
// 5. Дан номер некоторого года (целое положительное число). 
//    Определить соответствующий ему номер столетия, учитывая, 
//    что, к примеру, началом 20 столетия был 1901 год

 #include <iostream>

int main() {
    // Номер некоторого года
	int N = 2020;

    // Вычисляем век
	int Y = (N - 1)/100; 
    
    // Выводим результат
	printf_s("%i\n", Y); // Выводим результаты

	return 0;
}

